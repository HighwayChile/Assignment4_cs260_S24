Must use linked list structure that takes a value and adds 
it to a given position in the list (stack).  

Will create a class called Stack, like in the class examples.






Pseudo for functions and vars:
------------------------------------------

class Stack {
    Node *user_choice;
    int stack_sizesize;

    // the rest of this snippet is copy/pasta 
    public:
        Stack();
        // ~Stack(); // this is the signature of a destructor
        // intend to change these functions to match below
        void push(int new_node);
        int pop();
        int get_size();
    // end copy/pasta
};


Stack::Stack() {
   stack_size = 0; //list size begins at zero

   user_choice = nullptr; 
   // I am imagining a design where the stack is checked 
   // for empty, then if the list is >=1, 
   // the user may remove an item.  
   // the user may insert an item at any time, but if the  
   // stack_size is >=1, the user needs to choose a value 
   // and a position 
   // 
}

void insert() {

}

void remove() {

}


void get() {

}